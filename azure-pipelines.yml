trigger:
  - main
  - develop
  - feature/*

pool: 'Docker'

steps:
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'AzureStorage'
      azureResourceManagerEndpoint: 'ARM_EAGL_DEV'
      azureStorageAccountName: jdks
      azureContainerName: linuxjdks
      azureCommonVirtualFile: 'OpenJDK17U-jdk_x64_linux_hotspot_17.0.7_7.tar.gz'
      cleanDestinationDirectory: false
  - task: Maven@3
    displayName: Test and Package
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'install'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: 1.17
      jdkArchitectureOption: x64
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
  - script: echo "Publishing image with $(Build.BuildNumber)"
  - task: Maven@3
    displayName: Build and publish Filter Docker Image to Container Registry
    #    env:
    #      IMAGE_PREFIX: $(imageRegistryUrl)/maverick
    #      IMAGE_NAME: maverick-event-dispatcher-filter
    #      IMAGE_VERSION: release
    #      DOCKER_HOST: $(imageRegistryUrl)
    #      DOCKER_USER: $(docker.credentials.user)
    #      DOCKER_PASSWORD: $(docker.credentials.password)
    inputs:
      mavenPomFile: 'event-dispatcher-filter/pom.xml'
      goals: 'spring-boot:build-image'
      publishJUnitResults: true
      jdkVersionOption: 1.17
      options: >
        -DskipTests=false 
        -Ddocker.publish=true
        -Ddocker.credentials.user=$(imageRegistryUsername)
        -Ddocker.credentials.password=$(imageRegistryPassword)
        -Ddocker.registry.host=$(imageRegistryUrl)
